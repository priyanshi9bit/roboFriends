{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","cardcomponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","lenght","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAkBeA,EAfF,SAACC,GACV,IAAOC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACpB,OACI,sBAAKC,UAAU,uDAAf,UAEI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCAGI,6BAAKF,IACL,4BAAIC,WCMLK,EAhBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,OACVC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAO,cAAC,EAAD,CAEPT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAOT,OACA,8BACEH,KCDSI,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKX,UAAU,MAAf,SACI,uBACAA,UAAU,oCACVY,KAAO,SACPC,YAAY,gBACZC,SAAUH,OCEPI,G,MARA,SAACnB,GACZ,OACI,qBAAKoB,MAAO,CAACC,UAAW,SAASC,OAAQ,kBAAoBC,OAAQ,SAArE,SACGvB,EAAMwB,aCgBFC,E,kDAnBX,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IACD0B,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,wDAEJG,KAAK9B,MAAMwB,a,GAhBEQ,aC4CbC,E,kDApCX,aAAc,IAAD,8BACT,gBAYRC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACjB,YAAaqB,EAAMC,OAAOC,SAZrC,EAAKX,MAAQ,CACLlB,OAAQ,GACRM,YAAa,IAJZ,E,qDAQjB,WAAqB,IAAD,OAChBwB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKX,SAAS,CAACvB,OAAOkC,S,oBAKxC,WACQ,MAAgCZ,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQM,EAAhB,EAAgBA,YACV6B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASjC,EAAYgC,kBAEzD,OAAOtC,EAAOwC,OACb,yCAEO,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACG,cAAC,EAAD,CAAU1B,OAAQmC,e,GA9B3BX,aCGHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7e567528.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = (props) =>{\r\n    const {name, email, id } = props;\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 '>\r\n                            {/* background  border padding margin  animation */}\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                {/* <h2>Jane Doe</h2>\r\n                <p>janedoe@gmail.com</p> */}\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) =>{\r\n    const cardcomponent = robots.map((user, i) => {\r\n        return <Card \r\n        key={i} \r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].email}\r\n        />\r\n        // key is imp to differentiate and it should be something which doesn't get changed\r\n    })\r\n    return(\r\n    <div>\r\n     {cardcomponent}\r\n    </div>\r\n    );\r\n}\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue '\r\n            type = 'search' \r\n            placeholder='search robots' \r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll',border: '5px solid black' , height: '500px'}}>\r\n          {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React , { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError){\r\n            return <h1>oops. that is not good</h1>\r\n        }\r\n        return this.props.children \r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\n// STATE>>CONST\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n                robots: [],\r\n                searchfield: ''\r\n        }\r\n    }\r\n\r\ncomponentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response=> response.json())\r\n    .then(users=> this.setState({robots:users}));\r\n}\r\nonSearchChange = (event) => {\r\n    this.setState({searchfield: event.target.value})\r\n} \r\nrender() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return robots.lenght? \r\n         <h1>Loading</h1> :\r\n          (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                           <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Card from './Card.js';\n//import CardList from './CardList.js';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}